qualitative_summary = function(x) {
var_name = deparse(substitute(x))
relative = as.data.frame(table(x)/N)
#bar chart
ggplot(data=relative, aes(x=relative[,1],y=Freq))+
# geom_col(col="maroon",fill="lightskyblue", size=1)+
geom_col(col="#DA95CC",fill="#87AEDF", size=0.8)+
labs(title = paste(var_name,"relative frequency distribution"),
x = var_name, y = "Frequency")+
scale_y_continuous(labels = label_percent())+
geom_text(aes(label=percent(Freq)),vjust=-0.5)+
theme_hc()
# ggsave(paste(var_name,"relative frequency distribution.png"))
}
qualitative_summary(Fumatrici)
qualitative_summary(Tipo.parto)
qualitative_summary(Ospedale)
qualitative_summary(Sesso)
ggplot(data=newborn_data)+
geom_boxplot(aes(y=Anni.madre))
rm(list= ls())
require(ggplot2)
require(gghalves)
require(ggthemes)
require(scales)
require(colorspace)
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-inferenziale-per-datascience/progetto finale")
#1
newborn_data = read.csv("neonati.csv",sep = ",")
attach(newborn_data)
#2
#Dataset description: see requirements
#Study goal: see requirements
#Variables types:
#Anni.madre: quantitative - discrete (int values)
#N.gravidanze: quantitative - discrete (int values)
#Fumatrici: qualitative - nominal scale (2 levels)
#Gestazione: quantitative - discrete (int values)
#Peso: quantitative - discrete (int values)
#Cranio: quantitative - discrete (int values)
#Tipo.parto: qualitative - nominal scale
#Ospedale: qualitative - nominal scale
#Sesso: qualitative - nominal scale
#3 descriptive analysis
N = nrow(newborn_data) #sample size
#To describe data with a single chart i can use gghalves:
#For each quantitative variable one can make a violin plot + boxplot;
#by this way one can have an idea of data distribution and possible outliers.
#For qualitative variables one can make a bar plot of relative frequency distribution
#(that is an histogram of values).
##QUALITATIVE VARS (fumatrici, Tipo.parto, Ospedale, Sesso)
#create a custom function to reduce code
qualitative_summary = function(x) {
var_name = deparse(substitute(x))
relative = as.data.frame(table(x)/N)
#bar chart
ggplot(data=relative, aes(x=relative[,1],y=Freq))+
# geom_col(col="maroon",fill="lightskyblue", size=1)+
geom_col(col="#DA95CC",fill="#87AEDF", size=0.8)+
labs(title = paste(var_name,"relative frequency distribution"),
x = var_name, y = "Frequency")+
scale_y_continuous(labels = label_percent())+
geom_text(aes(label=percent(Freq)),vjust=-0.5)+
theme_hc()
# ggsave(paste(var_name,"relative frequency distribution.png"))
}
qualitative_summary(Fumatrici)
qualitative_summary(Tipo.parto)
qualitative_summary(Ospedale)
qualitative_summary(Sesso)
ggplot(data=newborn_data)+
geom_boxplot(aes(y=Anni.madre))+
theme_hc()
rm(list= ls())
require(ggplot2)
require(gghalves)
require(ggthemes)
require(scales)
require(colorspace)
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-inferenziale-per-datascience/progetto finale")
#1
newborn_data = read.csv("neonati.csv",sep = ",")
attach(newborn_data)
#2
#Dataset description: see requirements
#Study goal: see requirements
#Variables types:
#Anni.madre: quantitative - discrete (int values)
#N.gravidanze: quantitative - discrete (int values)
#Fumatrici: qualitative - nominal scale (2 levels)
#Gestazione: quantitative - discrete (int values)
#Peso: quantitative - discrete (int values)
#Cranio: quantitative - discrete (int values)
#Tipo.parto: qualitative - nominal scale
#Ospedale: qualitative - nominal scale
#Sesso: qualitative - nominal scale
#3 descriptive analysis
N = nrow(newborn_data) #sample size
#To describe data with a single chart i can use gghalves:
#For each quantitative variable one can make a violin plot + boxplot;
#by this way one can have an idea of data distribution and possible outliers.
#For qualitative variables one can make a bar plot of relative frequency distribution
#(that is an histogram of values).
##QUALITATIVE VARS (fumatrici, Tipo.parto, Ospedale, Sesso)
#create a custom function to reduce code
qualitative_summary = function(x) {
var_name = deparse(substitute(x))
relative = as.data.frame(table(x)/N)
#bar chart
ggplot(data=relative, aes(x=relative[,1],y=Freq))+
# geom_col(col="maroon",fill="lightskyblue", size=1)+
geom_col(col="#DA95CC",fill="#87AEDF", size=0.8)+
labs(title = paste(var_name,"relative frequency distribution"),
x = var_name, y = "Frequency")+
scale_y_continuous(labels = label_percent())+
geom_text(aes(label=percent(Freq)),vjust=-0.5)+
theme_hc()
# ggsave(paste(var_name,"relative frequency distribution.png"))
}
qualitative_summary(Fumatrici)
qualitative_summary(Tipo.parto)
qualitative_summary(Ospedale)
qualitative_summary(Sesso)
# ggplot(data=newborn_data)+
#     geom_boxplot(aes(y=Anni.madre))+
#     theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="l",fill="#DA95CC")+
theme_hc()
rm(list= ls())
require(ggplot2)
require(gghalves)
require(ggthemes)
require(scales)
require(colorspace)
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-inferenziale-per-datascience/progetto finale")
#1
newborn_data = read.csv("neonati.csv",sep = ",")
attach(newborn_data)
#2
#Dataset description: see requirements
#Study goal: see requirements
#Variables types:
#Anni.madre: quantitative - discrete (int values)
#N.gravidanze: quantitative - discrete (int values)
#Fumatrici: qualitative - nominal scale (2 levels)
#Gestazione: quantitative - discrete (int values)
#Peso: quantitative - discrete (int values)
#Cranio: quantitative - discrete (int values)
#Tipo.parto: qualitative - nominal scale
#Ospedale: qualitative - nominal scale
#Sesso: qualitative - nominal scale
#3 descriptive analysis
N = nrow(newborn_data) #sample size
#To describe data with a single chart i can use gghalves:
#For each quantitative variable one can make a violin plot + boxplot;
#by this way one can have an idea of data distribution and possible outliers.
#For qualitative variables one can make a bar plot of relative frequency distribution
#(that is an histogram of values).
##QUALITATIVE VARS (fumatrici, Tipo.parto, Ospedale, Sesso)
#create a custom function to reduce code
qualitative_summary = function(x) {
var_name = deparse(substitute(x))
relative = as.data.frame(table(x)/N)
#bar chart
ggplot(data=relative, aes(x=relative[,1],y=Freq))+
# geom_col(col="maroon",fill="lightskyblue", size=1)+
geom_col(col="#DA95CC",fill="#87AEDF", size=0.8)+
labs(title = paste(var_name,"relative frequency distribution"),
x = var_name, y = "Frequency")+
scale_y_continuous(labels = label_percent())+
geom_text(aes(label=percent(Freq)),vjust=-0.5)+
theme_hc()
# ggsave(paste(var_name,"relative frequency distribution.png"))
}
qualitative_summary(Fumatrici)
qualitative_summary(Tipo.parto)
qualitative_summary(Ospedale)
qualitative_summary(Sesso)
# ggplot(data=newborn_data)+
#     geom_boxplot(aes(y=Anni.madre))+
#     theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC")+
theme_hc()
?geom_half_boxplot
?aes
?geom_half_boxplot
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",width=1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",width=0.5)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",width=0.2)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF",width=0.2)+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",width=0.2)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF",width=0.2)+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC")+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC")+
theme_hc()
x <- rnorm(100000,10,2)
plot(density(x))
#asimmetria
mu<-mean(x)
sigma <- sd(x)
m3 <- sum( (x-mu)^3 ) / length(x)
asim.fisher <- m3 / sigma^3
asim.fisher
#curtosi
m4 <- sum( (x-mu)^4 ) / length(x)
curtosi <- m4 / sigma^4 - 3
curtosi
install.packages("moments")
library(moments)
skewness(x)
kurtosis(x)
library(ggplot2)
data("diamonds")
summary(diamonds)
attach(diamonds)
ggplot()+
geom_histogram(aes(x=price),
stat = "density",
col="lightblue",
fill="lightblue")
skewness(price)
kurtosis(price)-3
mean(price) ; median(price)
View(table(price))
install.packages("gghalves")
library(gghalves)
ggplot(data=diamonds)+theme_classic()+
geom_half_violin(mapping = aes(x=cut,y=price),
side = "l",fill="lightblue")+
geom_half_boxplot(mapping = aes(x=cut,y=price),
side = "r",fill="pink")
install.packages("gghalves")
install.packages("moments")
rm(list= ls())
require(ggplot2)
require(gghalves)
require(ggthemes)
require(scales)
require(colorspace)
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-inferenziale-per-datascience/progetto finale")
#1
newborn_data = read.csv("neonati.csv",sep = ",")
attach(newborn_data)
#2
#Dataset description: see requirements
#Study goal: see requirements
#Variables types:
#Anni.madre: quantitative - discrete (int values)
#N.gravidanze: quantitative - discrete (int values)
#Fumatrici: qualitative - nominal scale (2 levels)
#Gestazione: quantitative - discrete (int values)
#Peso: quantitative - discrete (int values)
#Cranio: quantitative - discrete (int values)
#Tipo.parto: qualitative - nominal scale
#Ospedale: qualitative - nominal scale
#Sesso: qualitative - nominal scale
#3 descriptive analysis
N = nrow(newborn_data) #sample size
#To describe data with a single chart i can use gghalves:
#For each quantitative variable one can make a violin plot + boxplot;
#by this way one can have an idea of data distribution and possible outliers.
#For qualitative variables one can make a bar plot of relative frequency distribution
#(that is an histogram of values).
##QUALITATIVE VARS (fumatrici, Tipo.parto, Ospedale, Sesso)
#create a custom function to reduce code
qualitative_summary = function(x) {
var_name = deparse(substitute(x))
relative = as.data.frame(table(x)/N)
#bar chart
ggplot(data=relative, aes(x=relative[,1],y=Freq))+
# geom_col(col="maroon",fill="lightskyblue", size=1)+
geom_col(col="#DA95CC",fill="#87AEDF", size=0.8)+
labs(title = paste(var_name,"relative frequency distribution"),
x = var_name, y = "Frequency")+
scale_y_continuous(labels = label_percent())+
geom_text(aes(label=percent(Freq)),vjust=-0.5)+
theme_hc()
# ggsave(paste(var_name,"relative frequency distribution.png"))
}
qualitative_summary(Fumatrici)
qualitative_summary(Tipo.parto)
qualitative_summary(Ospedale)
qualitative_summary(Sesso)
# ggplot(data=newborn_data)+
#     geom_boxplot(aes(y=Anni.madre))+
#     theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC")+
theme_hc()
rm(list= ls())
require(ggplot2)
require(gghalves)
require(ggthemes)
require(scales)
require(colorspace)
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-inferenziale-per-datascience/progetto finale")
#1
newborn_data = read.csv("neonati.csv",sep = ",")
attach(newborn_data)
#2
#Dataset description: see requirements
#Study goal: see requirements
#Variables types:
#Anni.madre: quantitative - discrete (int values)
#N.gravidanze: quantitative - discrete (int values)
#Fumatrici: qualitative - nominal scale (2 levels)
#Gestazione: quantitative - discrete (int values)
#Peso: quantitative - discrete (int values)
#Cranio: quantitative - discrete (int values)
#Tipo.parto: qualitative - nominal scale
#Ospedale: qualitative - nominal scale
#Sesso: qualitative - nominal scale
#3 descriptive analysis
N = nrow(newborn_data) #sample size
#To describe data with a single chart i can use gghalves:
#For each quantitative variable one can make a violin plot + boxplot;
#by this way one can have an idea of data distribution and possible outliers.
#For qualitative variables one can make a bar plot of relative frequency distribution
#(that is an histogram of values).
##QUALITATIVE VARS (fumatrici, Tipo.parto, Ospedale, Sesso)
#create a custom function to reduce code
qualitative_summary = function(x) {
var_name = deparse(substitute(x))
relative = as.data.frame(table(x)/N)
#bar chart
ggplot(data=relative, aes(x=relative[,1],y=Freq))+
# geom_col(col="maroon",fill="lightskyblue", size=1)+
geom_col(col="#DA95CC",fill="#87AEDF", size=0.8)+
labs(title = paste(var_name,"relative frequency distribution"),
x = var_name, y = "Frequency")+
scale_y_continuous(labels = label_percent())+
geom_text(aes(label=percent(Freq)),vjust=-0.5)+
theme_hc()
# ggsave(paste(var_name,"relative frequency distribution.png"))
}
qualitative_summary(Fumatrici)
qualitative_summary(Tipo.parto)
qualitative_summary(Ospedale)
qualitative_summary(Sesso)
# ggplot(data=newborn_data)+
#     geom_boxplot(aes(y=Anni.madre))+
#     theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T)+
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.5)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.3)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.3,errorbar.length=0.2)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.3,errorbar.length=0.1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.3,errorbar.length=5)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.3,errorbar.length=1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,errorbar.length=1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,errorbar.length=0.5)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,errorbar.length=0.1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,errorbar.draw=F)+
theme_hc()
length
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,errorbar.length=0.1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",errorbar.length=0.1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",errorbar.length=0.8)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",errorbar.length=0.1,center = T)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",errorbar.length=0.1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.3)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.1)+
theme_hc()
ggplot(data=newborn_data)+
geom_half_violin(mapping = aes(y=Anni.madre),
side="l",fill="#87AEDF")+
geom_half_boxplot(mapping = aes(y=Anni.madre),
side="r",fill="#DA95CC",center=T,width=0.5)+
theme_hc()
